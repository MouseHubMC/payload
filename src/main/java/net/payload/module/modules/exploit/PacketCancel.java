package net.payload.module.modules.exploit;

import net.minecraft.network.packet.s2c.play.ChunkLoadDistanceS2CPacket;
import net.minecraft.network.packet.s2c.play.ChunkRenderDistanceCenterS2CPacket;
import net.payload.Payload;
import net.payload.event.events.ReceivePacketEvent;
import net.payload.event.listeners.ReceivePacketListener;
import net.payload.module.Category;
import net.payload.module.Module;
import net.payload.settings.types.BooleanSetting;

public class PacketCancel extends Module implements ReceivePacketListener {

    private final BooleanSetting chunkload = BooleanSetting.builder()
            .id("packetcancel_chunkload")
            .displayName("ChunkLoadDistanceS2C")
            .defaultValue(false)
            .build();

    public PacketCancel() {
        super("PacketCancel");

        this.setName("PacketCancel");
        this.setCategory(Category.of("exploit"));
        this.setDescription("Cancels certain packets from being sent/received");
        this.addSetting(chunkload);

    }

    @Override
    public void onDisable() {
        Payload.getInstance().eventManager.RemoveListener(ReceivePacketListener.class, this);

    }

    @Override
    public void onEnable() {
        Payload.getInstance().eventManager.AddListener(ReceivePacketListener.class, this);
    }

    @Override
    public void onToggle() {

    }

    @Override
    public void onReceivePacket(ReceivePacketEvent readPacketEvent) {
        if (chunkload.get() && readPacketEvent.getPacket() instanceof ChunkLoadDistanceS2CPacket || readPacketEvent.getPacket() instanceof ChunkRenderDistanceCenterS2CPacket) {
            readPacketEvent.cancel();
        }
    }
}