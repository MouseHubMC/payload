
package net.payload.module.modules.exploit;

import net.minecraft.client.gui.screen.DownloadingTerrainScreen;
import net.minecraft.entity.player.PlayerPosition;
import net.minecraft.network.packet.s2c.play.PlayerPositionLookS2CPacket;
import net.minecraft.util.math.Vec3d;
import net.payload.Payload;
import net.payload.event.events.ReceivePacketEvent;
import net.payload.event.events.TickEvent;
import net.payload.event.listeners.AttackCooldownListener;
import net.payload.event.listeners.ReceivePacketListener;
import net.payload.event.listeners.TickListener;
import net.payload.module.Category;
import net.payload.module.Module;
import net.payload.settings.types.BooleanSetting;
import net.payload.utils.math.CacheTimer;

public class PortalGod extends Module implements ReceivePacketListener, TickListener {

    private BooleanSetting applyPos = BooleanSetting.builder()
            .id("portalgod_applypos")
            .displayName("ApplyPos")
            .defaultValue(true)
            .build();

    private double teleportX;
    private double teleportY;
    private double teleportZ;
    private boolean cancelTeleport;
    private final CacheTimer portalTimer = new CacheTimer();

    public PortalGod() {
        super("PortalGodmode");

        this.setCategory(Category.of("Exploit"));
        this.setDescription("Makes you invincible in portals");
        this.addSetting(applyPos);
    }

    @Override
    public void onDisable() {
        Payload.getInstance().eventManager.RemoveListener(ReceivePacketListener.class, this);
        Payload.getInstance().eventManager.RemoveListener(TickListener.class, this);
    }

    @Override
    public void onEnable() {
        Payload.getInstance().eventManager.AddListener(ReceivePacketListener.class, this);
        Payload.getInstance().eventManager.AddListener(TickListener.class, this);

        teleportX = 0.0;
        teleportY = 0.0;
        teleportZ = 0.0;
    }

    @Override
    public void onToggle() {
    }

    @Override
    public void onReceivePacket(ReceivePacketEvent readPacketEvent) {
        if (MC.player == null) {
            return;
        }
        if (MC.currentScreen instanceof DownloadingTerrainScreen) {
            cancelTeleport = true;
            MC.currentScreen = null;
            portalTimer.reset();
        }
        if (readPacketEvent.GetPacket() instanceof PlayerPositionLookS2CPacket packet) {
            PlayerPosition position = packet.change();
            Vec3d pos = position.position();

            if (applyPos.getValue() && !MC.player.isRiding()) {
                teleportX = pos.x;
                teleportY = pos.y;
                teleportZ = pos.z;
                MC.player.setPosition(pos.x, pos.y, pos.z);
            }

            readPacketEvent.cancel();
        }
    }



    @Override
    public void onTick(TickEvent.Pre event) {
        if (teleportX != 0.0
                && teleportY != 0.0 && teleportZ != 0.0 && cancelTeleport) {
            MC.player.setPosition(teleportX, teleportY, teleportZ);
            if (portalTimer.passed(2500)) {
                cancelTeleport = false;
            }
        }
    }

    @Override
    public void onTick(TickEvent.Post event) {

    }
}